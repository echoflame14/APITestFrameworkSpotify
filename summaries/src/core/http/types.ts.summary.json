{
  "filePath": "src\\core\\http\\types.ts",
  "summary": "The main purpose of this TypeScript file is to define the types and configurations for an HTTP client used in the application. The key functionality of this file includes: 1. **HttpClientConfig Interface**: This interface defines the configuration options for the HTTP client, including the base URL, timeout, number of retries, and retry delay. 2. **SafeAxiosConfig Type**: This type is an extension of the `AxiosRequestConfig` type from the `axios` library, with the addition of a `headers` property that can be either an `AxiosHeaders` instance or a record of string-string pairs. 3. **RetryConfig Interface**: This interface extends the `HttpClientConfig` interface and adds an optional `currentRetry` property for internal use in the HTTP client. 4. **ERROR_CODES Object**: This object defines a set of constant error codes that can be used throughout the application to represent different types of errors, such as rate limit errors, validation errors, network errors, and more. 5. **ErrorCode Type**: This type is a union of the error codes defined in the `ERROR_CODES` object, allowing for type-safe usage of these error codes throughout the application. In summary, this file provides a centralized place to define the configuration and error handling for the HTTP client used in the application, promoting consistency and reusability across different parts of the codebase.",
  "lastUpdated": "2025-01-29T02:07:41.872Z",
  "fileHash": "6d1b772f73d33e4835f02094578721ce"
}