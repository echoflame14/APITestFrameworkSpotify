{
  "filePath": "src\\core\\http\\errors.ts",
  "summary": "The main purpose of this TypeScript file is to provide a set of custom error classes and utility functions for handling Spotify API-related errors. Here's a summary of its key functionality: 1. **SpotifyHttpError**: This is the main error class that extends the built-in `Error` class. It provides a way to create and manage Spotify-specific errors, including the ability to derive error codes, get error metadata, and create normalized error objects. 2. **SpotifyRateLimitError**: A specialized error class that inherits from `SpotifyHttpError` and represents a rate-limiting error, including the ability to retrieve the retry-after duration. 3. **SpotifyAuthenticationError**: A specialized error class that inherits from `SpotifyHttpError` and represents an authentication-related error. 4. **SpotifyValidationError**: A specialized error class that inherits from `SpotifyHttpError` and represents a validation-related error, including the ability to store validation details. 5. **TrackValidationError**: A specialized error class that inherits from `SpotifyHttpError` and represents a track-specific validation error, including the ability to store invalid fields. 6. **Utility functions**: The file also exports several utility functions, such as `isSpotifyErrorResponse`, `enhanceErrorWithContext`, `isRetryableError`, `areSameErrorType`, and `isInstanceOfSpotifyError`, which help with handling and working with Spotify-related errors. The main purpose of this file is to provide a consistent and structured way of managing Spotify API-related errors, making it easier to handle and report errors in a Spotify-specific context.",
  "lastUpdated": "2025-01-29T20:25:47.467Z",
  "fileHash": "e4756ced6b43f79bb7456a184b174a43"
}