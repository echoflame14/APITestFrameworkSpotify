{
  "filePath": "src\\core\\http\\errors\\types.ts",
  "summary": "The main purpose of this TypeScript file is to define the structure and metadata for different types of errors that can occur in an application. It provides a standardized way of handling and logging errors, ensuring consistent error handling and reporting. The key functionality of this file includes: 1. **Error Context**: The `BaseErrorContext` interface defines the base context for error handling, including optional validation and request details. 2. **Validation Errors**: The `ValidationErrors` interface defines the structure for detailed validation errors. 3. **Request Context**: The `RequestContext` interface defines the HTTP request context information. 4. **Error Type Metadata**: The `ErrorTypeMetadata` interface defines the metadata for different types of errors, including error code, retryability, default message, severity, and status code. 5. **Normalized Error**: The `NormalizedError` interface defines the standardized error format for consistent error handling. 6. **Structured Error Log**: The `StructuredErrorLog` interface defines the structure for logging errors, including the context, stack trace, and severity. 7. **Spotify API Errors**: The `SpotifyErrorResponse` and `SpotifyErrorData` interfaces define the error response structure and extended error data specific to Spotify API errors. 8. **Error Severity and Codes**: The `ErrorSeverity` type and `ERROR_CODES` constant define the supported error severity levels and constant error codes for consistent error identification. 9. **Error Registry**: The `ERROR_REGISTRY` object defines the metadata for each error type, which can be used for consistent error handling and reporting. Overall, this file provides a comprehensive set of interfaces and utilities for managing and handling errors in an application, particularly in the context of interacting with the Spotify API.",
  "lastUpdated": "2025-01-29T00:29:20.888Z",
  "fileHash": "42ea30d1112bce84d7e390a3850344aa"
}