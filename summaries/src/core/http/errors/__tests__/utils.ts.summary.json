{
  "filePath": "src\\core\\http\\errors\\__tests__\\utils.ts",
  "summary": "The main purpose of this TypeScript file is to provide a set of utility functions and a factory class for creating and testing different types of Spotify-specific errors. The key functionality is as follows: 1. **TestErrorFactory**: This class provides static methods to create different types of Spotify errors, such as:    - `createRateLimitError()`: Creates a `SpotifyRateLimitError` with a specified retry time.    - `createValidationError()`: Creates a `SpotifyValidationError` with specified invalid fields and types.    - `createNetworkError()`: Creates a `SpotifyHttpError` representing a network connection failure.    - `createNotFoundError()`: Creates a `SpotifyHttpError` representing a \"not found\" error for a specific resource. 2. **Type Guard Assertions**:    - `assertIsRateLimitError()`: Asserts that a given error is an instance of `SpotifyRateLimitError`.    - `assertIsValidationError()`: Asserts that a given error is an instance of `SpotifyValidationError`. 3. **Error Assertion Utilities**:    - `assertErrorCode()`: Asserts that a given error has the expected error code.    - `assertErrorContext()`: Asserts that a given error has the expected context data. 4. **Type Guard**:    - `isSpotifyError()`: Checks if a given value is an instance of `SpotifyHttpError`. These utilities are likely used in the testing and development of the Spotify SDK, where handling and validating different types of Spotify-specific errors is crucial.",
  "lastUpdated": "2025-01-29T00:29:23.790Z",
  "fileHash": "720c277868a59bba1d875cb875682bec"
}