{
  "filePath": "src\\core\\http\\errors\\spotify-errors.ts",
  "summary": "The main purpose of this TypeScript file is to define a set of custom error classes and utilities related to handling errors that may occur when interacting with the Spotify API. Key functionality: 1. **SpotifyHttpError**: This is the base error class for all Spotify API-related errors. It provides a standardized way of handling and reporting errors, with properties such as `message`, `statusCode`, `code`, and `data`. 2. **SpotifyRateLimitError**: A specialized error class for handling rate limiting errors, which includes a `retryAfter` property indicating when the client can retry the request. 3. **SpotifyAuthenticationError**: An error class for handling authentication-related errors, with an `authType` property indicating the type of authentication (e.g., token or client). 4. **SpotifyValidationError**: An error class for handling validation errors, with a `validationDetails` property containing information about the validation errors. 5. **Utility functions**:    - `isSpotifyErrorResponse`: A type guard function to check if a given object is a valid Spotify error response.    - `deriveErrorCode`: A function that derives an appropriate error code from an error message.    - `isRetryableError`: A function that checks if a given error is retryable.    - `enhanceErrorWithContext`: A function that enhances an error with additional context information.    - `areSameErrorType`: A function that checks if two errors are of the same type.    - `isSpotifyHttpError`: A type guard function to check if a given error is a `SpotifyHttpError`. The main purpose of this file is to provide a consistent and structured way of handling errors that may occur when interacting with the Spotify API, making it easier to manage and report errors in a standardized manner.",
  "lastUpdated": "2025-01-29T20:06:12.279Z",
  "fileHash": "d5a5bf5c25f148a8d38dba6d7425b6ce"
}