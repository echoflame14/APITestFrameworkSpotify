{
  "filePath": "src\\core\\logging\\console-logger.ts",
  "summary": "This TypeScript file contains the implementation of a `ConsoleLogger` class, which is a concrete implementation of the `Logger` interface. The main purpose of this class is to provide a logging utility that can be used throughout the application. The key functionality of this `ConsoleLogger` class includes: 1. **Logging Methods**: The class provides three main logging methods: `info()`, `error()`, and `warn()`, which allow you to log messages with different severity levels. 2. **Test Utilities**: The class includes a set of static methods that are designed to support testing scenarios. These methods allow you to clear logged entries, retrieve captured logs, enable and disable test capture mode, and control the logging behavior during tests. 3. **Sanitization**: The class includes methods to sanitize the metadata associated with log entries, such as handling errors and redacting sensitive information (e.g., authorization headers, cookies) from logged objects. 4. **Test Mode**: The class has a static `testMode` object that is used to control the logging behavior during tests. It allows you to enable or disable the capture of logs, as well as to configure the logging to be silent or not. The main purpose of this `ConsoleLogger` class is to provide a consistent and controllable logging mechanism for the application, with specific features to support testing scenarios.",
  "lastUpdated": "2025-01-29T00:29:41.089Z",
  "fileHash": "2f8eed28b0bc0b4c92d47298c8608c13"
}