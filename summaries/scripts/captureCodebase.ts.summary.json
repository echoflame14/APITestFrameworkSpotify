{
  "filePath": "scripts\\captureCodebase.ts",
  "summary": "This TypeScript file is a part of a codebase capture tool. The main purpose of this tool is to analyze the contents of a directory and its subdirectories, capturing the file paths and their contents, while respecting a set of include and exclude patterns. The key functionality of this file includes: 1. **Interface Definitions**: It defines several interfaces, including `FileInfo`, `DirectoryStructure`, and `IncludePattern`, to represent the structure of the codebase and the patterns used for capturing files. 2. **Pattern Loading**: The `CodebaseCapture` class loads the include patterns from a CSV file specified by the `csvPath` parameter. It can handle both simple patterns and regular expressions. 3. **Codebase Scanning**: The `scanDirectory` method recursively scans the directory structure, starting from the `rootDir`, and builds a `DirectoryStructure` object that represents the files and subdirectories. 4. **File Capturing**: The `shouldCapture` method determines whether a file should be included in the capture based on the specified include and ignore patterns. 5. **Output Formatting**: The `formatOutput` method takes the `DirectoryStructure` and formats the captured file contents into a string, which is then written to a \"paste.txt\" file. 6. **Command-Line Execution**: The file also includes a command-line execution block, which allows the tool to be run from the command line with the root directory and CSV file path as arguments. In summary, this TypeScript file provides the core functionality for a codebase capture tool, allowing users to extract the contents of a project directory and save them to a text file, while respecting a set of configurable include and exclude patterns.",
  "lastUpdated": "2025-01-29T00:28:49.023Z",
  "fileHash": "0333c54669702ce0b23265d4a6ed6772"
}