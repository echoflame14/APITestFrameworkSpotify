{
  "filePath": "scripts\\captureCodebase.ts",
  "summary": "The main purpose of this TypeScript file is to create a utility that captures the contents of a codebase and generates a text file containing the source code. The key functionality includes: 1. **Configuration Management**: The file allows users to specify include patterns (either simple or regex) in a CSV file to determine which files should be captured. It also has a set of ignore patterns for common directories and files that should be excluded. 2. **Directory Scanning**: The `scanDirectory` function recursively scans the specified root directory and collects information about the files and directories. It creates a `DirectoryStructure` object that represents the hierarchical structure of the codebase. 3. **Content Extraction**: For each file that matches the include patterns, the `readFileContent` function reads the file's contents and adds it to the `DirectoryStructure`. 4. **Output Generation**: The `formatOutput` function takes the `DirectoryStructure` and generates a text file with the source code, organized by file and directory. 5. **Command-line Execution**: The file can be executed directly from the command line, allowing users to specify the root directory and the path to the CSV file containing the include patterns. The main class, `CodebaseCapture`, encapsulates all the functionality related to capturing the codebase and generating the output file. This utility can be useful for tasks such as backing up a codebase, creating code samples, or analyzing the contents of a project.",
  "lastUpdated": "2025-01-29T20:06:09.005Z",
  "fileHash": "a7e02793d92ab2e794cd758162924e6d"
}